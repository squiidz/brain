{"version":3,"sources":["webpack:///./src/app/code/code.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/code/code.component.ts","webpack:///./src/app/code/code.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/code/code.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/code/code.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Response, Headers, RequestOptions, Http } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { environment } from '../../environments/environment';\n\nimport 'rxjs/add/operator/map';\n\nimport { Code } from './code';\nimport { Output } from './output';\n\nconst apiUrl = `${environment.apiUrl}/run`;\n\n@Injectable()\nexport class CodeService {\n\n  constructor(private http: Http) {  }\n\n  postCode(code: Code): Observable<Output> {\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(apiUrl, {code: code.code, args: code.args}, options)\n      .map((res:Response) => res.json()) \n      .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\n  }\n\n//   addRemoteUser(user: User): Observable<User> {\n//     let headers = new Headers({ 'Content-Type': 'application/json' });\n//     let options = new RequestOptions({ headers: headers });\n\n//     return this.http.post(`${usersUrl}/new`, {name: user.name, age: user.age}, options)\n//       .map((res:Response) => res.json())\n//       .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\n//   }\n\n//   deleteUser(id: number): Observable<User> {\n//     let options = new RequestOptions();\n//     return this.http.delete(`${usersUrl}/${id}`, options)\n//       .map((res:Response) => res.json())\n//       .catch((error:any) => Observable.throw(error.json().error || 'Server error'));\n//   }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/code/code.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"http://localhost:8000/api\" \n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 517;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 517\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Brainfuck Compiler';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from '@angular/material';\nimport 'hammerjs';\n\nimport { AppComponent } from './app.component';\nimport { CodeComponent } from './code/code.component';\nimport { CodeService } from './code/code.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CodeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    MaterialModule.forRoot(),\n  ],\n  providers: [CodeService],\n  bootstrap: [AppComponent, CodeComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\n\nimport { CodeService } from './code.service';\nimport { Code } from './code';\nimport { Output } from './output';\n\n@Component({\n  selector: 'app-code',\n  templateUrl: './code.component.html',\n  styleUrls: ['./code.component.css']\n})\n\nexport class CodeComponent implements OnInit {\n  code: string = \"\";\n  args: string = \"\";\n  haveInput: boolean = false;\n  output: Output = {output: \"\", length: 0, error: \"\"};\n\n  constructor(private codeService: CodeService) { }\n\n  ngOnInit() {}\n\n  sendCode() {\n    let code = new Code(this.code, this.args);\n    this.codeService.postCode(code).\n      subscribe(\n        out => { this.output = out },\n        err => { console.log(err) });\n  }\n\n  containsInput() {\n    this.haveInput = this.code.includes(\",\");\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/code/code.component.ts","export class Code {\n    code: string;\n    args: string;\n    constructor(code: string, args: string) {\n        this.code = code;\n        this.args = args;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/code/code.ts","module.exports = \"h1 {\\n    text-align: center;\\n    font-family: 'Source Code Pro', monospace;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 822\n// module chunks = 1","module.exports = \".code {\\n    font-size: 16px;\\n    font-family: 'Source Code Pro', monospace;\\n}\\n\\n.output {\\n    font-size: 16px;\\n    font-family: 'Source Code Pro', monospace;\\n    background-color: #5f5f5f;\\n    color: #7ee03c;\\n}\\n\\n.args {\\n    padding: 5px 5px 5px 5px;\\n    margin-top: 5px;\\n    margin-bottom: 5px;\\n}\\n\\ntextarea {\\n    padding: 10px;\\n    resize: none;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/code/code.component.css\n// module id = 823\n// module chunks = 1","module.exports = \"<h1>{{title}}</h1>\\n<app-code>\\n</app-code>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 824\n// module chunks = 1","module.exports = \"<div id=\\\"codeEditor\\\" align=\\\"center\\\">\\n    <md-input-container *ngIf=\\\"haveInput\\\">\\n        <input mdInput [(ngModel)]=\\\"args\\\" class=\\\"args\\\" placeholder=\\\"Arguments\\\" required/>\\n    </md-input-container>\\n    <br>\\n    <textarea [(ngModel)]=\\\"code\\\" (ngModelChange)=\\\"containsInput()\\\" id=\\\"code\\\" class=\\\"code\\\" placeholder=\\\"Source Code\\\" rows=10 cols=150 autofocus></textarea>\\n    <textarea *ngIf=\\\"output.length > 0\\\" [(ngModel)]=\\\"output.output\\\" class=\\\"output\\\" placeholder=\\\"Output\\\" rows=10 cols=150 readonly></textarea>\\n    <textarea *ngIf=\\\"output.error\\\" [(ngModel)]=\\\"output.error\\\" class=\\\"output\\\" placeholder=\\\"Output\\\" rows=10 cols=150 readonly></textarea>\\n    <br>\\n    <button md-raised-button (click)=\\\"sendCode()\\\" class=\\\"run-btn\\\" type=\\\"submit\\\">Run</button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/code/code.component.html\n// module id = 825\n// module chunks = 1"],"sourceRoot":""}